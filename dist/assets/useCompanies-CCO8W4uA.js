import{r as n,s as c}from"./index-PA-U-bDe.js";const w=()=>{const[d,a]=n.useState([]),[m,i]=n.useState(!0),[p,t]=n.useState(null),l=async()=>{try{i(!0),t(null);const{data:s,error:r}=await c.from("companies").select("*").order("created_at",{ascending:!1});if(r)throw r;a(s||[])}catch(s){console.error("Error fetching companies:",s),t(s instanceof Error?s.message:"An error occurred")}finally{i(!1)}},f=async s=>{try{t(null);const{data:r,error:e}=await c.from("companies").insert(s).select().single();if(e)throw e;return a(o=>[r,...o]),{success:!0,data:r}}catch(r){const e=r instanceof Error?r.message:"Failed to add company";return t(e),console.error("Error adding company:",r),{success:!1,error:e}}},y=async(s,r)=>{try{t(null);const{data:e,error:o}=await c.from("companies").update(r).eq("id",s).select().single();if(o)throw o;return a(h=>h.map(u=>u.id===s?e:u)),{success:!0,data:e}}catch(e){const o=e instanceof Error?e.message:"Failed to update company";return t(o),console.error("Error updating company:",e),{success:!1,error:o}}},g=async s=>{try{t(null);const{error:r}=await c.from("companies").delete().eq("id",s);if(r)throw r;return a(e=>e.filter(o=>o.id!==s)),{success:!0}}catch(r){const e=r instanceof Error?r.message:"Failed to delete company";return t(e),console.error("Error deleting company:",r),{success:!1,error:e}}};return n.useEffect(()=>{l()},[]),{companies:d,loading:m,error:p,addCompany:f,updateCompany:y,deleteCompany:g,refetch:l}};export{w as u};
